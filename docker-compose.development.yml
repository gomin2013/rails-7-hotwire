version: '3'

services:
  postgres:
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root

    ports:
      - 5432:5432

    container_name: postgres_db
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password

    ports:
      - 8080:80

    container_name: pgadmin
    volumes:
      - pgadmin-data:/opt/pgadmin

    depends_on:
      - postgres

  web: &web_base
    build: .
    command: bundle exec foreman start -f Procfile.dev
    environment:
      - AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
      - AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_HOST=minio
      - AWS_ENDPOINT=http://minio:9000
      - AWS_BUCKET_NAME=rails-7-hotwire-dev
      - BUNDLE_PATH=/usr/local/bundle
      - EDITOR=vim
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RACK_ENV=development
      - RAILS_ENV=development
      - RAILS_MASTER_KEY
      - REDIS_URL=redis://redis:6379

    ports:
      - 80:3000
      - 443:3001
      - 8808:8808

    container_name: web
    volumes:
      - .:/rails-7-hotwire:cached
      - bundle:/usr/local/bundle:cached
      - dummy:/rails-7-hotwire/vendor
      - dummy:/rails-7-hotwire/log
      - dummy:/rails-7-hotwire/.git

    depends_on:
      - postgres
      - redis
      - elasticsearch

    tty: true
    stdin_open: true

  minio:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001

    container_name: minio
    volumes:
      - s3-data:/export

    environment:
      - MINIO_ROOT_USER=AKIAIOSFODNN7EXAMPLE
      - MINIO_ROOT_PASSWORD=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

    command: server /export --console-address ':9001'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2
    ports:
      - 9200:9200
      - 9300:9300

    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - http.cors.allow-credentials=true
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-origin=http://dev.rails-7-hotwire.com:1358
      - http.cors.enabled=true
      - http.port=9200

    ulimits:
      memlock:
        soft: -1
        hard: -1

    volumes:
      - es-data:/usr/share/elasticsearch/data/

  dejavu:
    image: appbaseio/dejavu
    ports:
      - 1358:1358

    container_name: dejavu
    depends_on:
      - elasticsearch

  worker:
    <<: *web_base
    command: bundle exec sidekiq -q default -q mailers
    ports: []
    container_name: worker

  redis:
    image: redis:6.2.6-alpine
    ports:
      - 6379:6379

    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

volumes:
  postgres-data:
    driver: local

  pgadmin-data:
    driver: local

  s3-data:
    driver: local

  es-data:
    driver: local

  redis-data:
    driver: local

  bundle:
    driver: local

  packs:
    driver: local

  dummy:
